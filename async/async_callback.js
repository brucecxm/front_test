
/**
 * 2. 回调函数（Callback）
 * 回调函数是最早期的异步操作方式。当一个异步操作完成后，它会调用一个预先指定的回调函数来处理结果。
 */
console.log('开始请求数据');

setTimeout(() => {
  console.log('数据请求成功');
}, 2000); // 模拟异步操作，2秒后执行

console.log('继续执行其他操作');
// 在上面的代码中，setTimeout 模拟了一个异步操作。尽管 setTimeout 延时了 2 秒，程序不会等待它完成，而是继续执行其他操作。
// 缺点：
// 回调地狱：当有多个异步操作需要依次执行时，回调函数会嵌套在一起，导致代码层级过深，不易维护和理解。






